import sys
import os

# This script is typically in: APP_BASE_DIR/outputs/generated_content/manim_scripts/
# layout_utils.py is in: APP_BASE_DIR/layout_utils.py
# Add APP_BASE_DIR to sys.path to allow direct import of layout_utils.
script_absolute_path = os.path.abspath(__file__)
script_dir = os.path.dirname(script_absolute_path)
# Navigate three levels up from script_dir (manim_scripts -> generated_content -> outputs -> APP_BASE_DIR)
app_base_dir = os.path.abspath(os.path.join(script_dir, "..", "..", ".."))

if app_base_dir not in sys.path:
    sys.path.insert(0, app_base_dir)

from manim import *
from layout_utils import *  # Core utilities for layout
import numpy as np  # If needed for complex calculations
import logging

logger = logging.getLogger(__name__)

# --- Helper Function: stack_mobjects_vertically ---
def stack_mobjects_vertically(mobjects_list, center_point=ORIGIN, buff=0.5):
    # Ensure VGroup and ORIGIN are available from manim import
    group = VGroup(*mobjects_list).arrange(DOWN, buff=buff)
    if not np.array_equal(center_point, ORIGIN):  # Only move if center_point is not default ORIGIN
        group.move_to(center_point)
    return group

# --- Helper Function: get_zone_center ---
def get_zone_center(zone_name: str):
    # Ensure logger is defined, ORIGIN from manim, np for numpy array
    logger.warning(f"get_zone_center called for '{zone_name}' using default ORIGIN. Define actual zone coordinates if specific positioning is critical.")
    # Example for specific zones (adapt as needed by uncommenting and defining coordinates):
    # main_content_area_center = np.array([0, 1, 0])  # Example: 1 unit up from center
    # if zone_name == "MAIN_CONTENT_AREA":
    #     return main_content_area_center
    return ORIGIN  # Default to screen center

# --- END OF MANDATORY HELPER DEFINITIONS ---

class Scene2Scene_2_Topic__NonCooperation_Movement(Scene):
    def construct(self):
        # Create and animate the scene title in TITLE_AREA
        title_text = create_smart_text(
            "Scene 2: Topic - Non-Cooperation Movement",
            zone_name="TITLE_AREA",
            font_size=48,
            max_font_size=60
        )
        self.play(Write(title_text))
        
        # Create and animate the narration text in NARRATION_AREA
        narration_text = create_smart_text(
            "This is the narration for scene 2 concerning Non-Cooperation Movement. More details would be generated by an AI.",
            zone_name="NARRATION_AREA",
            font_size=28,
            target_zone_width=get_zone_width("NARRATION_AREA") * 0.8
        )
        self.play(FadeIn(narration_text))
        
        # Create key points for main content in MAIN_CONTENT_AREA
        key_point1 = create_smart_text(
            "Key Point 1: Boycott of foreign goods and promotion of Swadeshi.",
            zone_name="MAIN_CONTENT_AREA",
            font_size=32,
            target_zone_width=get_zone_width("MAIN_CONTENT_AREA") * 0.7
        )
        key_point2 = create_smart_text(
            "Key Point 2: Mass civil disobedience led by Gandhi against British rule.",
            zone_name="MAIN_CONTENT_AREA",
            font_size=32,
            target_zone_width=get_zone_width("MAIN_CONTENT_AREA") * 0.7
        )
        
        # Stack key points vertically and position in MAIN_CONTENT_AREA
        main_content_group = stack_mobjects_vertically(
            [key_point1, key_point2],
            center_point=get_zone_center("MAIN_CONTENT_AREA")
        )
        self.play(FadeIn(main_content_group, run_time=1.5))
        
        # Add a visual representation: A simple circle to symbolize unity or protest
        unity_symbol = Circle(radius=0.8, color=BLUE, fill_opacity=0.5).next_to(main_content_group, DOWN, buff=0.5)
        unity_symbol.move_to(get_zone_center("MAIN_CONTENT_AREA"))  # Ensure it's centered in the zone
        self.play(Create(unity_symbol))
        
        # Add a line to represent the movement's path
        movement_line = Line(
            start=np.array([get_zone_center("MAIN_CONTENT_AREA")[0] - 2, get_zone_center("MAIN_CONTENT_AREA")[1], 0]),
            end=np.array([get_zone_center("MAIN_CONTENT_AREA")[0] + 2, get_zone_center("MAIN_CONTENT_AREA")[1], 0]),
            color=RED,
            stroke_width=4
        )
        self.play(Write(movement_line))
        
        self.wait(5)  # Pause to allow viewing, typical scene length
        self.play(FadeOut(VGroup(title_text, narration_text, main_content_group, unity_symbol, movement_line)))